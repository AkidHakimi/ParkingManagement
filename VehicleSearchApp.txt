import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Map;

public class VehicleSearchApp {
    private JFrame frame;
    private JTextField searchField;
    private JTextArea resultArea;
    private Map<String, Vehicle> vehicleDatabase;

    public VehicleSearchApp() {
        vehicleDatabase = new HashMap<>();
        initializeData();

        frame = new JFrame("Vehicle Search System");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(500, 436);
        frame.getContentPane().setLayout(new BorderLayout(10, 10));
        frame.getContentPane().setBackground(Color.WHITE);

        initSearchPanel();
        initResultPanel();

        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    private void initializeData() {
        vehicleDatabase.put("BBA 123", new Vehicle("BBA 123", "L2", "A", "P2"));
        vehicleDatabase.put("CCA 456", new Vehicle("CCA 456", "L2", "A", "P4"));
        vehicleDatabase.put("DDA 789", new Vehicle("DDA 789", "L2", "A", "P6"));
        vehicleDatabase.put("UKM 100", new Vehicle("UKM 100", "L2", "A", "P8"));
        vehicleDatabase.put("EEA 234", new Vehicle("EEA 234", "L2", "A", "P9"));
        vehicleDatabase.put("FFA 567", new Vehicle("FFA 567", "L2", "A", "P11"));
        vehicleDatabase.put("GGA 890", new Vehicle("GGA 890", "L2", "A", "P14"));
        vehicleDatabase.put("HHA 123", new Vehicle("HHA 123", "L2", "A", "P16"));
        vehicleDatabase.put("IIA 456", new Vehicle("IIA 456", "L2", "A", "P19"));

    }

    private void initSearchPanel() {
        JPanel searchPanel = new JPanel(new BorderLayout(10, 10));
        searchPanel.setBorder(BorderFactory.createEmptyBorder(35, 35, 35, 35));
        searchPanel.setBackground(Color.WHITE);

        JPanel topPanel = new JPanel(new BorderLayout(10, 10));
        topPanel.setBackground(Color.WHITE);

        JButton backButton = new JButton("Back");
        backButton.setPreferredSize(new Dimension(70, 20));
        backButton.addActionListener(e -> frame.dispose()); // Simplified lambda
        styleButton(backButton);
        topPanel.add(backButton, BorderLayout.WEST);

        JLabel searchLabel = new JLabel("Enter License Plate Number:");
        searchLabel.setFont(new Font("Arial", Font.BOLD, 14));
        topPanel.add(searchLabel, BorderLayout.CENTER);

        searchPanel.add(topPanel, BorderLayout.NORTH);

        searchField = new JTextField();
        searchPanel.add(searchField, BorderLayout.CENTER);

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 10, 10));
        JButton searchButton = new JButton("Search");
        searchButton.addActionListener(new SearchActionListener());
        styleButton(searchButton);
        buttonPanel.add(searchButton);
        searchPanel.add(buttonPanel, BorderLayout.SOUTH);

        frame.getContentPane().add(searchPanel, BorderLayout.NORTH);
    }

    private void initResultPanel() {
        JPanel resultPanel = new JPanel(new BorderLayout()); // Use BorderLayout
        resultPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        resultPanel.setBackground(Color.WHITE);

        JLabel resultLabel = new JLabel("Search Results:");
        resultLabel.setFont(new Font("Arial", Font.BOLD, 14));
        resultPanel.add(resultLabel, BorderLayout.NORTH);

        resultArea = new JTextArea();
        resultArea.setEditable(false);
        resultArea.setFont(new Font("Arial", Font.PLAIN, 14));
        resultArea.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        JScrollPane scrollPane = new JScrollPane(resultArea);
        resultPanel.add(scrollPane, BorderLayout.CENTER); // Add scroll pane to center

        frame.getContentPane().add(resultPanel, BorderLayout.CENTER);
    }

    private class SearchActionListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String licensePlate = searchField.getText().trim();
            if (licensePlate.isEmpty()) {
                JOptionPane.showMessageDialog(frame, "Please enter a license plate number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Vehicle vehicle = vehicleDatabase.get(licensePlate);
            if (vehicle != null) {
                resultArea.setText(vehicle.toString());
            } else {
                resultArea.setText("Vehicle not found.");
            }
        }
    }

    private void styleButton(JButton button) {
        button.setBackground(new Color(70, 130, 180));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setFont(new Font("Arial", Font.BOLD, 14));
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(VehicleSearchApp::new);
    }
}

class Vehicle {
    private String licensePlate;
    private String level;
    private String block;
    private String parkingSpot;

    public Vehicle(String licensePlate, String level, String block, String parkingSpot) {
        this.licensePlate = licensePlate;
        this.level = level;
        this.block = block;
        this.parkingSpot = parkingSpot;
    }

    @Override
    public String toString() {
        return "License Plate: " + licensePlate + "\n" +
                "Level: " + level + "\n" +
                "Block: " + block + "\n" +
                "Parking Spot: " + parkingSpot + "\n";
    }
}
